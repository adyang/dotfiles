#!/usr/bin/env bash

readonly SCRIPTS_LIB_DIR='{{ joinPath .chezmoi.workingTree "lib" }}'
readonly VSCODE_CONFIG_SOURCE_DIR='{{ joinPath .chezmoi.workingTree "vscode" }}'

# shellcheck source=../../../lib/log.bash
source "${SCRIPTS_LIB_DIR}/log.bash"
# shellcheck source=../../../lib/file.bash
source "${SCRIPTS_LIB_DIR}/file.bash"

main() {
  DOT_HOME="${DOT_HOME:-${HOME}}"
  readonly DOT_HOME

  header 'Configure VS Code'
  configure_vscode
}

configure_vscode() {
  ensure_macos_permission
  symlink_vscode_configs "${VSCODE_CONFIG_SOURCE_DIR}" "${DOT_HOME}/Library/Application Support/Code/User"
  install_vscode_extensions "${VSCODE_CONFIG_SOURCE_DIR}/extensions"
}

ensure_macos_permission() {
  if ! code --list-extensions; then
    note $'\nPlease allow opening of "Visual Studio Code" in System Preferences > Security & Privacy > General.'
    note 'Then click "Open" on subsequent dialog.'
    read -rp 'Press RETURN to continue when done...' || exit "$?"
  fi
}

symlink_vscode_configs() {
  local src_dir="$1"
  local dest_dir="$2"
  mkdir -p "${dest_dir}"
  local configs=('keybindings.json' 'settings.json' 'snippets')
  local config
  for config in "${configs[@]}"; do
    backup_if_regular_file "${dest_dir}/${config}" || exit "$?"
    symlink_if_absent "${src_dir}/${config}" "${dest_dir}/${config}" || exit "$?"
  done
}

install_vscode_extensions() {
  local extensions_file="$1"
  local extension
  while read -r extension; do
    code --force --install-extension "${extension}" || exit "$?"
  done < "${extensions_file}"
}

(return 0 2>/dev/null) || main "$@"
